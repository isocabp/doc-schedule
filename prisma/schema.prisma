generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  image    String?
  role     Role    @default(PATIENT)

  specialty   String?
  healthPlans String[]

  appointmentsAsPatient Appointment[] @relation("PatientAppointments")
  appointmentsAsDoctor  Appointment[] @relation("DoctorAppointments")
  blockedDates          BlockedDate[] // Datas bloqueadas (ex.: férias)

  availabilities Availability[] // Relação inversa para disponibilidade

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Appointment {
  id        String @id @default(uuid())
  patient   User   @relation("PatientAppointments", fields: [patientId], references: [id])
  patientId String

  doctor   User   @relation("DoctorAppointments", fields: [doctorId], references: [id])
  doctorId String

  date  DateTime
  notes String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Availability {
  id       String @id @default(uuid())
  doctor   User   @relation(fields: [doctorId], references: [id])
  doctorId String

  weekday   Int // 0 (Domingo) até 6 (Sábado)
  startTime String // Ex: "08:00"
  endTime   String // Ex: "17:00"

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlockedDate {
  id       String @id @default(uuid())
  doctor   User   @relation(fields: [doctorId], references: [id])
  doctorId String

  date   DateTime
  reason String?

  createdAt DateTime @default(now())
}

enum Role {
  PATIENT
  DOCTOR
}
